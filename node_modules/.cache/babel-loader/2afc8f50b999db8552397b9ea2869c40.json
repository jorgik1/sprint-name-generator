{"ast":null,"code":"var _jsxFileName = \"/Users/yuriystenin/Projects/sprint-name-generator/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport Result from './components/Result';\nimport { adjectives } from './words/adjectives';\nimport { nouns } from './words/nouns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [adjectivesList, setAdjectivesList] = useState([]);\n  const [nounsList, setNounsList] = useState([]);\n  const [sprintName, setSprintName] = useState(\"\");\n  useEffect(() => {\n    setAdjectivesList(adjectives);\n    setNounsList(nouns);\n  }, []);\n\n  const handleGenerate = () => {\n    const selectedAdjIndex = Math.floor(Math.random() * adjectivesList.length);\n    const selectedNounIndex = Math.floor(Math.random() * nounsList.length);\n    setSprintName(`${adjectivesList[selectedAdjIndex]} ${nounsList[selectedNounIndex]}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"Sprint Name Generator\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-prime\",\n        onClick: handleGenerate,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Result, {\n      text: sprintName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0LMynYS2NzSZCnyw0innX78Azvo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yuriystenin/Projects/sprint-name-generator/src/App.tsx"],"names":["React","useState","useEffect","Result","adjectives","nouns","App","adjectivesList","setAdjectivesList","nounsList","setNounsList","sprintName","setSprintName","handleGenerate","selectedAdjIndex","Math","floor","random","length","selectedNounIndex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,KAAT,QAAsB,eAAtB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAW,EAAX,CAApD;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAW,EAAX,CAA1C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAS,EAAT,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,iBAAiB,CAACJ,UAAD,CAAjB;AACAM,IAAAA,YAAY,CAACL,KAAD,CAAZ;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMQ,cAAc,GAAG,MAAM;AAC3B,UAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBV,cAAc,CAACW,MAA1C,CAAzB;AACA,UAAMC,iBAAiB,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBR,SAAS,CAACS,MAArC,CAA1B;AAEAN,IAAAA,aAAa,CAAE,GAAEL,cAAc,CAACO,gBAAD,CAAmB,IAAGL,SAAS,CAACU,iBAAD,CAAoB,EAArE,CAAb;AACH,GALC;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,qDAEE;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAEN,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA5BuBL,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.scss';\nimport Result from './components/Result';\nimport { adjectives } from './words/adjectives'\nimport { nouns } from './words/nouns'\n\nexport default function App() {\n\n  const [adjectivesList, setAdjectivesList] = useState<string[]>([]);\n  const [nounsList, setNounsList] = useState<string[]>([]);\n  const [sprintName, setSprintName] = useState<string>(\"\");\n\n  useEffect(() => {\n    setAdjectivesList(adjectives);\n    setNounsList(nouns);\n  }, [])\n\n  const handleGenerate = () => {\n    const selectedAdjIndex = Math.floor(Math.random() * adjectivesList.length)\n    const selectedNounIndex = Math.floor(Math.random() * nounsList.length)\n\n    setSprintName(`${adjectivesList[selectedAdjIndex]} ${nounsList[selectedNounIndex]}`)\n}\n\n\n  return (\n    <div className=\"App\">\n        Sprint Name Generator\n      <div>\n        <button className='btn-prime' onClick={handleGenerate}>Generate</button>\n      </div>\n      <Result text={sprintName}/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}